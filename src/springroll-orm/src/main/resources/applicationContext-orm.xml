<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
			http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

    <jpa:repositories base-package="com.springroll.orm" />

    <context:spring-configured/>

    <bean id="userTransactionService" class="com.atomikos.icatch.config.UserTransactionServiceImp"
          init-method="init" destroy-method="shutdownForce">
        <constructor-arg>
            <props>
                <prop key="com.atomikos.icatch.max_timeout">${sr.jta.max_timeout}</prop>
                <prop key="com.atomikos.icatch.default_jta_timeout">${sr.jta.default_timeout}</prop>
                <prop key="com.atomikos.icatch.max_actives">-1</prop>
                <!--<prop key="com.atomikos.icatch.output_dir">target/</prop>-->
                <!--<prop key="com.atomikos.icatch.log_base_dir">target/</prop>-->
            </props>
        </constructor-arg>
    </bean>

    <bean id="atomikosTransactionManager" class="com.springroll.orm.AtomikosFactory" factory-method="createUserTransactionManager" destroy-method="close" depends-on="userTransactionService"/>

    <bean id="atomikosUserTransaction" class="com.springroll.orm.AtomikosFactory" factory-method="createUserTransactionImp"/>

    <bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">
        <property name="transactionManager" ref="atomikosTransactionManager"/>
        <property name="userTransaction" ref="atomikosUserTransaction"/>
    </bean>


    <bean class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init" destroy-method="close" id="datasource" depends-on="transactionManager">
        <property name="uniqueResourceName" value="springroll"/>
        <property name="xaDataSourceClassName" value="${sr.datasource.xaDataSourceClassName}"/>
        <property name="xaProperties">
            <props>
                <prop key="URL">${sr.datasource.url}</prop>
                <prop key="user">${sr.datasource.username}</prop>
                <prop key="password">${sr.datasource.password}</prop>
            </props>
        </property>
        <property name="testQuery" value="${sr.datasource.testquery}" />
        <property name="minPoolSize" value="${sr.datasource.minPoolSize}" />
        <property name="maxPoolSize" value="${sr.datasource.maxPoolSize}" />
    </bean>

    <bean id="jpaDialect" class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" depends-on="liquibase">
        <property name="jpaDialect" ref="jpaDialect"/>
        <property name="dataSource" ref="datasource" />
        <property name="sharedCacheMode" value="DISABLE_SELECTIVE"/>
        <property name="persistenceUnitName" value="persistenceUnit" />
        <property name="packagesToScan" value="com.springroll.orm,${sr.orm.packages}"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="databasePlatform" value="${sr.datasource.hibernate.dialect}"/>
                <property name="showSql" value="${sr.datasource.hibernate.showSql}" />
                <property name="generateDdl" value="false"/>
                <property name="database" value="${sr.datasource.vendor}"/>
            </bean>
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="javax.persistence.transactionType">JTA</prop>
                <prop key="hibernate.current_session_context_class">jta</prop>
                <prop key="hibernate.transaction.factory_class">org.hibernate.engine.transaction.internal.jta.CMTTransactionFactory</prop>
                <prop key="hibernate.transaction.manager_lookup_class">com.atomikos.icatch.jta.hibernate3.TransactionManagerLookup</prop>
                <prop key="hibernate.transaction.jta.platform">com.springroll.orm.AtomikosJtaPlatform</prop>
                <prop key="hibernate.max_fetch_depth">${sr.datasource.hibernate.max_fetch_depth}</prop>
                <prop key="hibernate.jdbc.fetch_size">${sr.datasource.hibernate.jdbc.fetch_size}</prop>
                <prop key="hibernate.jdbc.batch_size">${sr.datasource.hibernate.jdbc.batch_size}</prop>
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.hbm2ddl.auto">validate</prop>
                <prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.DefaultNamingStrategy</prop>
                <prop key="hibernate.connection.charSet">UTF-8</prop>
                <prop key="hibernate.default_schema">${sr.datasource.username}</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.connection.autocommit">false</prop>
                <prop key="org.hibernate.FlushMode">always</prop>
                <prop key="hibernate.cache.use_second_level_cache">false</prop>
                <prop key="hibernate.cache.use_query_cache">false</prop>
                <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.infinispan.InfinispanRegionFactory</prop>
                <prop key="hibernate.cache.infinispan.cfg">infinispan.xml</prop>
                <prop key="hibernate.cache.infinispan.statistics">true</prop>
            </props>
        </property>
    </bean>
    <bean id="liquibase" class="liquibase.integration.spring.SpringLiquibase">
        <property name="dataSource" ref="datasource"/>
        <property name="changeLog" value="classpath:springroll-liquibase.xml"/>
        <!--<property name="contexts" value="${liquibaseContexts}" />-->
        <property name="shouldRun" value="${sr.liquibase.shouldRun}" />
        <property name="dropFirst" value="false"/>
        <property name="defaultSchema" value="${sr.datasource.username}"/>
    </bean>
</beans>
